・sourceでシェルを実行するのと普通に実行するのの違い
source [ファイル名]で実行すると、ファイルの内容が現在実行している
シェルの一部として実行されるが、
./[ファイル名]で実行すると、別なシェルとして実行される。

以下のようなtest.shがあるとする。
#!/bin/bash

aaa="aaaをセットした"
echo $aaa

sourceの場合
$ source test.sh
aaaをセットした 
$ echo $aaa
aaaをセットした 

## 現在実行しているシェルの一部として実行されているので、$aaaは呼び出し元にも反映される

普通に実行した場合
$ ./test.sh
aaaをセットした 
$ echo $aaa

## サブシェルとして別プロセスで実行されているので、$aaaには何もセットされていない
## ちなみにサブシェルで変数をエクスポートとしても親シェルでは認識できないが、
## 親シェルでエクスポートした変数はサブシェルで認識できる。

・名前が同じ場合の実行の優先順位
1. エイリアス
2. functionやif、forなどのキーワード
3. 関数
4. cdやtypeなどの組み込みコマンド
5. スクリプトと実行可能ファイル(PATH環境変数のディレクトリリストに基づく検索順位で)
